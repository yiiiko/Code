//still in process...
//pseudocode
//two bottons on the screen
//change to different background color when pressed

int circleX, circleY;  
     
int circleSize = 93;   
color circleColor1, circleColor2, baseColor;
color circleHighlight1, circleHighlight2;
color currentColor;
boolean circle1 = false;
boolean circle2 = false;
float ballX;
float ballY;

float ballSize;

float speedX;
float speedY;

void setup() {
  size(640, 640);
  circleColor1 = color(255);
  circleHighlight1 = color(204);
  baseColor = color(250, 206, 45);
  currentColor = baseColor;
  circleX = width/2+circleSize/2+10;
  circleY = height/2;
  circleX = width/2-circleSize-10;
  circleY = height/2-circleSize/2;
  ellipseMode(CENTER);
  
  ballX = width/2;
  ballY = height/2;
  
  speedX = random(-5,5);
  speedY = random(-5,5);
  
  ballSize = 50;
}

void draw() {
  float r = map(ballX, 0, width, 0, 255);
  float g = map(ballY, 0, height, 0, 255);
  update(mouseX, mouseY);
  background(currentColor);
  fill(r,g,150);
    ellipse(ballX, ballY, ballSize, ballSize);
  
  ballX += speedX;
  ballY += speedY;
  
  if (ballX > width - ballSize/2 || ballX < ballSize/2) {
    ballX -= speedX;
    speedX = -speedX;
  }
  
  if (ballY > height - ballSize/2 || ballY < ballSize/2) {
    ballY -= speedY;
    speedY = -speedY;
  }
  
  
  
  
  
  ellipse(circleX, circleY, circleSize, circleSize);
  ellipse(circleX + 100, circleY, circleSize, circleSize);
  
  if (circle2) {
    fill(circleHighlight1);
  } else {
    fill(circleColor1);
  }
  stroke(0);
  ellipse(circleX, circleY, circleSize, circleSize);
  
}




void update(int x, int y) {
  if ( overCircle(circleX, circleY, circleSize) ) {
    circle2 = true;
    circle1 = false;
  } else if ( overCircle (circleX + 10, circleY + 10, circleSize) ) {
    circle1 = true;
    circle2 = false;
  } else {
    circle2 = circle1 = false;
  }
  if ( overCircle(circleX, circleY, circleSize) ) {
    circle2 = true;
    circle1 = false;
  } else if ( overCircle (circleX + 10, circleY + 10, circleSize) ) {
    circle1 = true;
    circle2 = false;
  } else {
    circle2 = circle1 = false;
  }
}

void mousePressed() {
  if (circle2) {
    currentColor = circleColor1;
  }
  if (circle1) {
    currentColor = circleColor2;
  }
}



boolean overCircle(int x, int y, int diameter) {
  float disX = x - mouseX;
  float disY = y - mouseY;
  if (sqrt(sq(disX) + sq(disY)) < diameter/2 ) {
    return true;
  } else {
    return false;
  }
}
